{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Cassandra, RabbitMQ, Celery workers and main instance",
  "Parameters" : {
    "GitRevision" : {
      "Type" : "String",
      "Default" : "production",
      "Description" : "The git revision the instances will run on"
    },
    "CassandraInstanceType" : {
      "Type" : "String",
      "Default" : "t2.medium",
      "Description" : "Please provide the instance type"
    },
    "CassandraClusterSize" : {
      "Type" : "Number",
      "Default" : "1",
      "Description" : "How many instances do you want to use for the Cassandra's cluster?"
    },
    "RabbitMQInstanceType" : {
      "Type" : "String",
      "Default" : "t2.medium",
      "Description" : "Please provide the instance type"
    },
    "CeleryInstanceType" : {
      "Type" : "String",
      "Default" : "t2.medium",
      "Description" : "Please provide the instance type"
    }
  },
  "Mappings" : {
    "BenchMap": {
        "SettingsMap": {
            "AvailabilityZones": ["us-east-1c"],
            "KeyName": "StreamFrameworkBench"
        },
        "CassandraMap": {
            "AMI" : "ami-8fcee4e5"
        },
        "RabbitMap": {
            "AMI" : "ami-8fcee4e5"
        },
        "CeleryMap": {
            "AMI" : "ami-8fcee4e5"
        }
    }
  },
  "Resources": {

    "CassandraSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80 and SSH access",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "7000", "ToPort" : "7000", "SourceSecurityGroupId" : { "Ref" : "CassandraSecurityGroup" }},
          {"IpProtocol" : "tcp", "FromPort" : "7199", "ToPort" : "7199", "SourceSecurityGroupId" : { "Ref" : "CassandraSecurityGroup" }},
          {"IpProtocol" : "tcp", "FromPort" : "9042", "ToPort" : "9042", "SourceSecurityGroupId" : { "Ref" : "CassandraSecurityGroup" }},
          {"IpProtocol" : "tcp", "FromPort" : "9042", "ToPort" : "9042", "SourceSecurityGroupId" : { "Ref" : "CelerySecurityGroup" }},
          {"IpProtocol" : "tcp", "FromPort" : "9160", "ToPort" : "9160", "SourceSecurityGroupId" : { "Ref" : "CassandraSecurityGroup" }}
        ]
      }
    },
  
    "CassandraAutoscaling": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones" : {"Fn::FindInMap" : [ "BenchMap", "SettingsMap", "AvailabilityZones" ]},
        "Cooldown": "300",
        "MaxSize": { "Ref": "CassandraClusterSize" },
        "MinSize": { "Ref": "CassandraClusterSize" },
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "EC2",
        "LaunchConfigurationName": {
          "Ref": "Cassandra"
        }
      }
    },

    "Cassandra": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "BenchMap", "CassandraMap", "AMI" ]},
        "InstanceType": { "Ref": "CassandraInstanceType" },
        "KeyName": {"Fn::FindInMap" : [ "BenchMap", "SettingsMap", "KeyName" ]},
        "SecurityGroups": [{ "Ref" : "CassandraSecurityGroup" }],
        "Tags": [ { "Name": { "Fn::Join": [ "stream-bench-celery-", { "Ref": "AWS::StackName" }] } }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "--clustername benchmark --totalnodes ",
              { "Ref": "CassandraClusterSize" },
              " --version community --release 3.3 --repository https://github.com/riptano/ComboAMI#2.6.3 --bootstrap --opscenter no"]
          }
        }
      }
    },
    
    "RabbitSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80 and SSH access",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "5672", "ToPort" : "5672", "SourceSecurityGroupId" : { "Ref" : "CelerySecurityGroup" }},
          {"IpProtocol" : "tcp", "FromPort" : "15672", "ToPort" : "15672", "CidrIp" : "0.0.0.0/0"}
        ]
      }
    },
  
    "RabbitAutoScaling": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones" : {"Fn::FindInMap" : [ "BenchMap", "SettingsMap", "AvailabilityZones" ]},
        "Cooldown": "300",
        "MaxSize": "1",
        "MinSize": "1",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "EC2",
        "LaunchConfigurationName": {
          "Ref": "Rabbit"
        }
      }
    },
    
    "Rabbit": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "BenchMap", "RabbitMap", "AMI" ]},
        "InstanceType": { "Ref": "RabbitMQInstanceType" },
        "KeyName": {"Fn::FindInMap" : [ "BenchMap", "SettingsMap", "KeyName" ]},
        "SecurityGroups": [{ "Ref" : "RabbitSecurityGroup" }],
        "Tags": [ { "Name": { "Fn::Join": [ "stream-bench-rabbit-", { "Ref": "AWS::StackName" }] } }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#cloud-config",
                "\n",
                "packages:",
                "\n",
                " - git",
                "\n",
                " - gcc",
                "\n",
                " - python-dev",
                "\n",
                " - libev4",
                "\n",
                " - libev-dev",
                "\n",
                " - python-pip",
                "\n",
                " - rabbitmq-server",
                "\n\n",
                "runcmd:",
                "\n",
                " - mkdir -p /srv/bench/",
                "\n",
                " - /usr/bin/git clone ",
                {"Fn::FindInMap" : [ "BenchMap", "SettingsMap", "GitRepo" ]},
                " /srv/bench/sfb",
                "\n",
                " - pip install -r /srv/bench/sfb/requirements.txt",
                "\n",
                " - DD_API_KEY=",
                { "Ref" : "DatadogAPIKey" },
                " bash -c \"$(curl -L https://raw.githubusercontent.com/DataDog/dd-agent/master/packaging/datadog-agent/source/install_agent.sh)\"",
                "\n"
              ]
            ]
          }
        }
      }
    },
    
    "CelerySecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80 and SSH access",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
        ]
      }
    },
  
    "CeleryAutoScaling": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones" : {"Fn::FindInMap" : [ "BenchMap", "SettingsMap", "AvailabilityZones" ]},
        "Cooldown": "300",
        "MaxSize": "1",
        "MinSize": "1",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "EC2",
        "LaunchConfigurationName": {
          "Ref": "Celery"
        }
      }
    },
    
    "Celery": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "BenchMap", "CeleryMap", "AMI" ]},
        "InstanceType": { "Ref": "CassandraInstanceType" },
        "KeyName": {"Fn::FindInMap" : [ "BenchMap", "SettingsMap", "KeyName" ]},
        "SecurityGroups": [{ "Ref" : "CelerySecurityGroup" }],
        "Tags": [ { "Name": { "Fn::Join": [ "stream-bench-celery-", { "Ref": "AWS::StackName" }] } }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#cloud-config",
                "\n",
                "packages:",
                "\n",
                " - git",
                "\n",
                " - gcc",
                "\n",
                " - python-dev",
                "\n",
                " - libev4",
                "\n",
                " - libev-dev",
                "\n",
                " - python-pip",
                "\n\n",
                "runcmd:",
                "\n",
                " - mkdir -p /srv/bench/",
                "\n",
                " - /usr/bin/git clone ",
                {"Fn::FindInMap" : [ "BenchMap", "SettingsMap", "GitRepo" ]},
                " /srv/bench/sfb",
                "\n",
                " - pip install -r /srv/bench/sfb/requirements.txt",
                "\n",
                " - DD_API_KEY=",
                { "Ref" : "DatadogAPIKey" },
                " bash -c \"$(curl -L https://raw.githubusercontent.com/DataDog/dd-agent/master/packaging/datadog-agent/source/install_agent.sh)\"",
                "\n",
                " - C_FORCE_ROOT=1 ENVIRONMENT=production celery -A benchmark worker -l debug --workdir /srv/bench/sfb",
                "\n"
              ]
            ]
          }
        }
      }
    }
  }
}